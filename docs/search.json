[
  {
    "objectID": "SINASC.html",
    "href": "SINASC.html",
    "title": "Analysis of Genetic Anomalies found on SINASC database",
    "section": "",
    "text": "The main libraries are read.dbc, microdatasus and cid10. Both are hosted on GitHub. Check the links to see how to install them. The other packages are for data manipulation, analysis and visualization.\n\n\nCode\n#ETL\nlibrary(read.dbc)\nlibrary(microdatasus)\nlibrary(DBI)\nlibrary(RPostgres)\n\n#data manipulation\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(cid10)\n\n#statistics\nlibrary(rstatix)\n\n#data viz\nlibrary(ggpubr)\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(DT)\nlibrary(htmltools)"
  },
  {
    "objectID": "SINASC.html#loading-libraries",
    "href": "SINASC.html#loading-libraries",
    "title": "Analysis of Genetic Anomalies found on SINASC database",
    "section": "",
    "text": "The main libraries are read.dbc, microdatasus and cid10. Both are hosted on GitHub. Check the links to see how to install them. The other packages are for data manipulation, analysis and visualization.\n\n\nCode\n#ETL\nlibrary(read.dbc)\nlibrary(microdatasus)\nlibrary(DBI)\nlibrary(RPostgres)\n\n#data manipulation\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(cid10)\n\n#statistics\nlibrary(rstatix)\n\n#data viz\nlibrary(ggpubr)\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(DT)\nlibrary(htmltools)"
  },
  {
    "objectID": "SINASC.html#downloading-data-from-datasus",
    "href": "SINASC.html#downloading-data-from-datasus",
    "title": "Analysis of Genetic Anomalies found on SINASC database",
    "section": "Downloading data from dataSUS",
    "text": "Downloading data from dataSUS\nWhat is dataSUS?….\n\n\nCode\n#extract SINASC dataset\nsinasc = fetch_datasus(year_start = 2010,\n                       year_end = 2023,\n                       month_start = 1,\n                       month_end = 12,\n                       uf = \"all\",\n                       information_system = \"SINASC\")\n\n#save into a RData\nsave(sinasc, file = \"nao_upar/sinasc.RData\")\n\n\n\nNOTE: A characteristic of SINASC is that the dataset is released yearly and, as now, the data from 2023 is preliminary."
  },
  {
    "objectID": "SINASC.html#data-manipulation",
    "href": "SINASC.html#data-manipulation",
    "title": "Analysis of Genetic Anomalies found on SINASC database",
    "section": "Data manipulation",
    "text": "Data manipulation\nA few data cleaning, and transformation will be necessary to make the dataset more organized and accurate.\n\n\nCode\n#use the function process_sinac and clean names with janitor\nsinasc = process_sinasc(sinasc) |&gt; \n  clean_names()\n\n#remove deprecated collumns remaining from the function process_sinasc\n\nsinasc1 = sinasc1 |&gt; \n  rownames_to_column(var = \"entry\") |&gt; \n  mutate(locnasc = locnasc_as_factor_data_locnasc,\n         idademae = idademae_as_factor_data_idademae,\n         estcivmae = estcivmae_as_factor_data_estcivmae,\n         escmae = escmae_as_factor_data_escmae, \n         gestacao = gestacao_as_factor_data_gestacao,\n         parto = parto_as_factor_data_parto) |&gt; \n  select(-c(contains(\"_as_factor_\"))) |&gt;\n  mutate(across(contador:codmunnasc, ~ as.numeric(.x))) |&gt;\n  mutate(locnasc = as.factor(locnasc)) |&gt; \n  mutate(idademae = as.numeric(idademae)) |&gt; \n  mutate(across(estcivmae:escmae, ~ as.factor(.x))) |&gt;\n  mutate(across(qtdfilvivo:codmunres, ~ as.numeric(.x))) |&gt;\n  mutate(across(gestacao:consultas, ~ as.factor(.x))) |&gt;\n  mutate(dtnasc = as.Date(dtnasc, tryFormats = \"%Y-%m-%d\")) |&gt;\n  mutate(sexo = as.factor(sexo)) |&gt; \n  mutate(across(apgar1:apgar5, ~ as.numeric(.x))) |&gt; \n  mutate(peso = as.numeric(peso)) |&gt; \n  mutate(idanomal = if_else(is.na(codanomal) == TRUE, \"não\", \"sim\")) |&gt;\n  mutate(idanomal = as.factor(idanomal)) |&gt; \n  mutate(dtcadastro = as.Date(dtcadastro, tryFormats = \"%Y-%m-%d\")) |&gt;\n  mutate(dtrecebim = as.Date(dtrecebim, tryFormats = \"%Y-%m-%d\")) |&gt;\n  mutate(across(naturalmae:codufnatu, ~ as.factor(.x))) |&gt;\n  mutate(across(escmae2010:seriescmae, ~ as.numeric(.x))) |&gt; \n  mutate(dtnascmae = as.Date(dtnascmae, tryFormats = \"%Y-%m-%d\")) |&gt;\n  mutate(racacormae = as.factor(racacormae)) |&gt;   \n  mutate(across(qtdgestant:idadepai, ~ as.numeric(.x))) |&gt;  \n  mutate(dtultmenst = as.Date(dtultmenst, tryFormats = \"%Y-%m-%d\")) |&gt;\n  mutate(semagestac = as.numeric(semagestac)) |&gt; \n  mutate(tpmetestim = case_when(tpmetestim == 1 ~ \"exame físico\",\n                                tpmetestim == 2 ~ \"outro método\",\n                                tpmetestim == 9 ~ \"ignorado\")) |&gt; \n  mutate(tpmetestim = as.factor(tpmetestim)) |&gt; \n  mutate(across(consprenat:mesprenat, ~ as.numeric(.x))) |&gt; \n  mutate(tpapresent = case_when(tpapresent == 1 ~ \"cefálico\",\n                                tpapresent == 2 ~ \"pélvica ou podálica\",\n                                tpapresent == 3 ~ \"transversa\",\n                                tpapresent == 9 ~ \"ignorado\")) |&gt; \n  mutate(sttrabpart = case_when(sttrabpart == 1 ~ \"sim\",\n                                sttrabpart == 2 ~ \"não\",\n                                sttrabpart == 3 ~ \"não se aplica\",\n                                sttrabpart == 9 ~ \"ignorado\")) |&gt;\n  mutate(stcesparto = case_when(stcesparto == 1 ~ \"sim\",\n                                stcesparto == 2 ~ \"não\",\n                                stcesparto == 3 ~ \"não se aplica\",\n                                stcesparto == 9 ~ \"ignorado\")) |&gt; \n  mutate(tpnascassi = case_when(tpnascassi == 1 ~ \"médico\",\n                                tpnascassi == 2 ~ \"enfermagem ou obstetriz\",\n                                tpnascassi == 3 ~ \"parteira\",\n                                tpnascassi == 4 ~ \"outros\",\n                                tpnascassi == 9 ~ \"ignorado\")) |&gt; \n  mutate(tpdocresp = case_when(tpdocresp == 1 ~ \"médico\",\n                               tpdocresp == 2 ~ \"enfermagem\",\n                               tpdocresp == 3 ~ \"parteira\",\n                               tpdocresp == 4 ~ \"funcionário do cartório\",\n                               tpdocresp == 5 ~ \"outros\")) |&gt; \n  mutate(tpfuncresp = case_when(tpfuncresp == 1 ~ \"CNES\",\n                                tpfuncresp == 2 ~ \"CRM\",\n                                tpfuncresp == 3 ~ \"COREM\",\n                                tpfuncresp == 4 ~ \"RG\",\n                                tpfuncresp == 5 ~ \"CPF\")) |&gt;\n  mutate(dtdeclarac = as.Date(dtdeclarac, tryFormats = \"%Y-%m-%d\")) |&gt;\n  mutate(escmaeagr1 = case_when(escmaeagr1 == 0  ~ \"sem escolaridade\",\n                                escmaeagr1 == 2  ~ \"fundamental incompleto\",\n                                escmaeagr1 == 3  ~ \"fundamental I completo\",\n                                escmaeagr1 == 4  ~ \"fundamental II incompleto\",\n                                escmaeagr1 == 5  ~ \"fundamental II completo\",\n                                escmaeagr1 == 6  ~ \"ensino médio incompleto\",\n                                escmaeagr1 == 7  ~ \"ensino médio completo\",\n                                escmaeagr1 == 8  ~ \"superior incompleto\",\n                                escmaeagr1 == 9  ~ \"superior completo\",\n                                escmaeagr1 == 10 ~ \"ignorado\",\n                                escmaeagr1 == 11 ~ \"fundamental II incompleto ou inespecífico\",\n                                escmaeagr1 == 12 ~ \"ensino médio incompleto ou inespecífico\")) |&gt;\n  mutate(stdnepidem = case_when(stdnepidem == 1 ~ \"sim\",\n                                stdnepidem == 2 ~ \"não\")) |&gt; \n  mutate(stdnnova = case_when(stdnnova == 1 ~ \"sim\",\n                              stdnnova == 2 ~ \"não\")) |&gt;\n  mutate(codpaisres = as.factor(codpaisres)) |&gt; \n  mutate(tprobson = as.numeric(tprobson)) |&gt; \n  mutate(paridade = case_when(paridade == 1 ~ \"multípara\",\n                              paridade == 2 ~ \"nulípara\")) |&gt;  \n  mutate(across(kotelchuck:contador_2, ~ as.numeric(.x))) |&gt;\n  mutate(across(codocupmae:mun_res_uf, ~ as.factor(.x))) |&gt;\n  mutate(across(mun_res_lat:mun_res_area, ~ as.numeric(.x)))\n\n\nWhen making an internal data validation, we have detected that some values in the ‘dtultmenst’ variable are not in the format YYYY-MM-DD. Instead it is in the format YY-MM-DD. Therefore, we needed to fix this formating error prior to send the dataset to a postgreSQL database.\n\n\nCode\nsinasc = sinasc |&gt; \n  mutate(dtultmenst = if_else(nchar(as.character(dtultmenst)) == 8, \n                              paste0(\"20\",as.character(dtultmenst)),\n                              as.character(dtultmenst))) |&gt; \n  mutate(dtultmenst = as.Date(dtultmenst, tryFormats = \"%Y-%m-%d\"))\n\n\nThe same happened for the ‘dtnascmae’ variable, however with three different types of formatting error.\n\n\nCode\nsinasc = sinasc |&gt;\n  mutate(dtnascmae = if_else(nchar(as.character(dtnascmae)) == 7, \n                             paste0(\"200\",as.character(dtnascmae)), \n                             as.character(dtnascmae))) |&gt; \n  mutate(dtnascmae = if_else(nchar(as.character(dtnascmae)) == 8, \n                             paste0(\"19\",as.character(dtnascmae)),  \n                             as.character(dtnascmae))) |&gt; \n  mutate(dtnascmae = if_else(nchar(as.character(dtnascmae)) == 9, \n                             paste0(\"1\",as.character(dtnascmae)),   \n                             as.character(dtnascmae))) |&gt; \n  mutate(dtnascmae = as.Date(dtnascmae, tryFormats = \"%Y-%m-%d\")) \n\n\n\nFurthermore, we detected an entry with the mother birth date as ‘1-03-23’, which would be 2001-03-23, but the registered mother age was 29 years.\n\nNext, we will create a category for when the child has only one anomaly or multiple anomalies and another category with prirority anomalies based on the CID-10 nomenclature.\n\n\nCode\nanomalias_prioritarias = list(defeitos_tubo_neural = c(\"Q000\", \"Q001\", \"Q002\", \"Q010\", \"Q050\"),\n                             microcefalia = c(\"Q020\"),\n                             cardiopatias_congenitas = c(\"Q200\", \"Q210\", \"Q220\",\"Q230\", \"Q240\", \"Q250\", \"Q260\", \"Q270\", \"Q280\"),\n                             fendas_orais = c(\"Q350\", \"Q360\", \"Q370\"),\n                             defeitos_orgaos_genitais = c(\"Q540\",\"Q560\"),\n                             defeitos_membros = c(\"Q660\", \"Q690\", \"Q710\", \"Q720\", \"Q730\", \"Q743\"),\n                             defeitos_parede_abdominal = c(\"Q792\", \"Q793\"),\n                             sindorme_down = c(\"Q900\")\n)\n\nsinasc = sinasc |&gt;\n  mutate(codanomal = gsub(\"X\", \"0\", codanomal)) %&gt;% \n  mutate(codanomal = gsub(\" \", \"\", codanomal)) %&gt;% \n  mutate(codanomal = gsub(\"(.{4})(?=.{1,})\", \"\\\\1;\", codanomal, perl = TRUE)) %&gt;% \n  mutate(anomal_categ = case_when(nchar(codanomal) == 4 ~ \"isolada\",\n                                  nchar(codanomal) &gt;= 5 ~ \"múltipla\",\n                                  is.na(codanomal) == TRUE ~ \"sem_anomalia\"\n         )) %&gt;% \n  mutate(anomal_prioritarias = case_when(grepl(paste(anomalias_prioritarias[[1]], collapse = \"|\"), codanomal) == TRUE ~ \"defeitos_tubo_neural\",\n                                         grepl(paste(anomalias_prioritarias[[2]], collapse = \"|\"), codanomal) == TRUE ~ \"microcefalia\",\n                                         grepl(paste(anomalias_prioritarias[[3]], collapse = \"|\"), codanomal) == TRUE ~ \"cardiopatias_congenitas\",\n                                         grepl(paste(anomalias_prioritarias[[4]], collapse = \"|\"), codanomal) == TRUE ~ \"fendas_orais\",\n                                         grepl(paste(anomalias_prioritarias[[5]], collapse = \"|\"), codanomal) == TRUE ~ \"defeitos_orgaos_genitais\",\n                                         grepl(paste(anomalias_prioritarias[[6]], collapse = \"|\"), codanomal) == TRUE ~ \"defeitos_membros\",\n                                         grepl(paste(anomalias_prioritarias[[7]], collapse = \"|\"), codanomal) == TRUE ~ \"defeitos_parede_abdominal\",\n                                         grepl(paste(anomalias_prioritarias[[8]], collapse = \"|\"), codanomal) == TRUE ~ \"sindorme_down\",\n                                         (idanomal == \"Sim\" &\n                                           grepl(paste(as.character(unlist(anomalias_prioritarias)), collapse = \"|\"), codanomal) == FALSE) ~ \"outras_anomalias\"\n))\n\n\n\nNOTE: In cases of newborns with multiple anomalies that fall into the same priority groups, the case is considered as one record, instead of two records."
  },
  {
    "objectID": "SINASC.html#load-the-dataframe-into-a-postgresql-database",
    "href": "SINASC.html#load-the-dataframe-into-a-postgresql-database",
    "title": "Analysis of Genetic Anomalies found on SINASC database",
    "section": "Load the dataframe into a PostgreSQL database",
    "text": "Load the dataframe into a PostgreSQL database\nIn order to make the dataset more accessible, we will finish the ETL process by loading the transformed object into a postgresql database, so anyone with access to it can make direct queries or use it with other pipelines downstream.\n\nNOTE: create a file .env, in the project directory, to store your credentials. each row should contain one variable and its value (without quotes), such as:\n\nUSER=postgres\nPASSWORD=r&gt;python\n\n\n\nCode\n#read the environment variables with the credentials\nreadRenviron(\".env\")\n\ncon = dbConnect(drv = RPostgres::Postgres(),\n                dbname=\"data_sus\",\n                host = Sys.getenv(\"HOST_ADDRESS\"),\n                port = 5432,\n                user = Sys.getenv(\"USER\"),\n                password = Sys.getenv(\"PASSWORD\"))\n\n\n\n\nCode\n#write the datafame as a SQL table\ndbWriteTable(conn = con,\n             name = \"sinasc\",   \n             value = sinasc,\n             field.types = c(entry = \"SERIAL PRIMARY KEY\"),\n             overwrite = TRUE)\n\n\nTo confirm that the load was successful, we can make a query to the database and see if the results are consistent:\n\n\nCode\n#query for the 100 first rows of the table\nquery = paste0(\"SELECT * FROM sinasc LIMIT 100;\")\nresult = dbGetQuery(con, query)\n\n#close the connection\ndbDisconnect(con)\nrm(con)\n\n#get an overview of the dataset\nglimpse(result, width = 75)\n\n\nRows: 100\nColumns: 80\n$ entry               &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14…\n$ contador            &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14…\n$ origem              &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ codcart             &lt;dbl&gt; 5096, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ numregcart          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dtregcart           &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ codestab            &lt;dbl&gt; 2515598, 3792595, 2798484, 5701929, 5701929, …\n$ codmunnasc          &lt;dbl&gt; 110002, 110011, 110030, 120001, 120001, 12000…\n$ locnasc             &lt;chr&gt; \"Hospital\", \"Hospital\", \"Hospital\", \"Hospital…\n$ idademae            &lt;dbl&gt; 24, 22, 20, 21, 31, 23, 26, 21, 20, 31, 28, 2…\n$ estcivmae           &lt;chr&gt; \"Casada\", \"Casada\", \"Solteira\", \"Solteira\", \"…\n$ escmae              &lt;chr&gt; \"8 a 11 anos\", \"8 a 11 anos\", \"4 a 7 anos\", \"…\n$ qtdfilvivo          &lt;dbl&gt; 1, 1, 1, 3, 4, 1, 2, 2, 3, 3, 1, 3, 6, 3, 5, …\n$ qtdfilmort          &lt;dbl&gt; NA, 0, 0, 1, 1, 0, NA, 1, 2, 0, 0, 0, 0, 1, 3…\n$ codmunres           &lt;dbl&gt; 120040, 120040, 120040, 120001, 120001, 12000…\n$ codpaisres          &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", …\n$ gestacao            &lt;chr&gt; \"37 a 41 semanas\", \"37 a 41 semanas\", \"37 a 4…\n$ gravidez            &lt;chr&gt; \"única\", \"única\", \"única\", \"única\", \"única\", …\n$ parto               &lt;chr&gt; \"Cesáreo\", \"Cesáreo\", \"Vaginal\", \"Vaginal\", \"…\n$ consultas           &lt;chr&gt; \"7 ou mais vezes\", \"4 a 6 vezes\", \"7 ou mais …\n$ dtnasc              &lt;date&gt; 2010-05-07, 2010-06-03, 2010-02-23, 2010-04-…\n$ horanasc            &lt;chr&gt; \"1155\", \"0948\", \"1123\", \"0700\", \"0505\", \"0840…\n$ sexo                &lt;chr&gt; \"Masculino\", \"Masculino\", \"Masculino\", \"Femin…\n$ apgar1              &lt;dbl&gt; 9, 8, 8, 9, 9, 7, 7, 8, 8, 8, 8, 8, 8, 8, 10,…\n$ apgar5              &lt;dbl&gt; 10, 9, 9, 10, 10, 9, 10, 10, 9, 10, 9, 9, 9, …\n$ racacor             &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ peso                &lt;dbl&gt; 3400, 3950, 3550, 3000, 3000, 3900, 3250, 350…\n$ idanomal            &lt;chr&gt; \"Não\", \"Não\", \"Não\", \"Não\", \"Não\", \"Não\", \"Nã…\n$ dtcadastro          &lt;date&gt; 2010-06-10, 2010-07-01, 2010-03-15, 2010-05-…\n$ codanomal           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ numerolote          &lt;chr&gt; \"20100005\", \"20100007\", \"20100003\", \"20100002…\n$ versaosist          &lt;chr&gt; \"2.2.08\", \"2.2.08\", \"2.2.07\", \"2.2.08\", \"2.2.…\n$ dtrecebim           &lt;date&gt; 2010-06-17, 2010-07-06, 2010-04-16, 2010-05-…\n$ difdata             &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dtrecorig           &lt;chr&gt; \"2010-06-17\", \"2010-07-06\", \"2010-04-16\", \"20…\n$ naturalmae          &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ codmunnatu          &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ seriescmae          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dtnascmae           &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ racacormae          &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ qtdgestant          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ qtdpartnor          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ qtdpartces          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ idadepai            &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dtultmenst          &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ semagestac          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ tpmetestim          &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ consprenat          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ mesprenat           &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ tpapresent          &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ sttrabpart          &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ stcesparto          &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ tprobson            &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ stdnepidem          &lt;chr&gt; \"sim\", \"sim\", \"sim\", \"sim\", \"sim\", \"sim\", \"si…\n$ stdnnova            &lt;chr&gt; \"sim\", \"sim\", \"sim\", \"sim\", \"sim\", \"sim\", \"si…\n$ racacor_rn          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ racacorn            &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ escmae2010          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ codmuncart          &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ codufnatu           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ tpnascassi          &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ escmaeagr1          &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dtrecoriga          &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ tpfuncresp          &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ tpdocresp           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ dtdeclarac          &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ paridade            &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ kotelchuck          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ contador_2          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ codocupmae          &lt;chr&gt; NA, NA, NA, NA, \"Trabalhador da cultura de ar…\n$ mun_res_status      &lt;chr&gt; \"ATIVO\", \"ATIVO\", \"ATIVO\", \"ATIVO\", \"ATIVO\", …\n$ mun_res_tipo        &lt;chr&gt; \"MUNIC\", \"MUNIC\", \"MUNIC\", \"MUNIC\", \"MUNIC\", …\n$ mun_res_nome        &lt;chr&gt; \"Rio Branco\", \"Rio Branco\", \"Rio Branco\", \"Ac…\n$ mun_res_uf          &lt;chr&gt; \"Acre\", \"Acre\", \"Acre\", \"Acre\", \"Acre\", \"Acre…\n$ mun_res_lat         &lt;dbl&gt; -9.97830, -9.97830, -9.97830, -10.07379, -10.…\n$ mun_res_lon         &lt;dbl&gt; -67.81053, -67.81053, -67.81053, -67.05232, -…\n$ mun_res_alt         &lt;dbl&gt; 138, 138, 138, 206, 206, 206, 206, 206, 206, …\n$ mun_res_area        &lt;dbl&gt; 8835.541, 8835.541, 8835.541, 1807.957, 1807.…\n$ anomal_categ        &lt;chr&gt; \"sem_anomalia\", \"sem_anomalia\", \"sem_anomalia…\n$ anomal_prioritarias &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n\n\n\nNOTE: As it is possible to see with glimpse(), the original factor variables in the dataframe where automatically converted into character when the data is pulled from the postgreSQL database."
  },
  {
    "objectID": "fatores.html",
    "href": "fatores.html",
    "title": "Descriptive Analysis",
    "section": "",
    "text": "Code\ncbo = tabCBO %&gt;% \n  mutate(cbo_grande_grupo = substr(cod, start = 1, stop = 1)) %&gt;%\n  mutate(cbo_subgrupo_principal = substr(cod, start = 1, stop = 2)) %&gt;% \n  relocate(cbo_grande_grupo, .before = cod) %&gt;% \n  relocate(cbo_subgrupo_principal, .before = cod) %&gt;%\n  mutate(cbo_grande_grupo_desc = case_when(cbo_grande_grupo == \"0\" ~ \"Forças armadas,policiais e bombeiros militares\",\n                                           cbo_grande_grupo == \"1\" ~ \"Membros superiores do poder público, dirigentes de org. de empresas e gerentes\",\n                                           cbo_grande_grupo == \"2\" ~ \"Profissionais das ciências e das artes\",\n                                           cbo_grande_grupo == \"3\" ~ \"Técnicos do nível médio\",\n                                           cbo_grande_grupo == \"4\" ~ \"Trab. de serviços administrativos\",\n                                           cbo_grande_grupo == \"5\" ~ \"Trab. dos servuços, vendedores do comércio em lojas e mercados\",\n                                           cbo_grande_grupo == \"6\" ~ \"Trab. agropecuários,florestais, da caça e pesca\",\n                                           cbo_grande_grupo == \"7\" ~ \"Trab. da produção de bens e serviços industrias 1\",\n                                           cbo_grande_grupo == \"8\" ~ \"Trab. da produção de bens e serviços industriais 2\",\n                                           cbo_grande_grupo == \"9\" ~ \"Trab. de manutenção e reparo\"\n))  %&gt;%\n  group_by(cbo_grande_grupo) %&gt;%\n  mutate(cbo_subgrupo_desc = case_when(cbo_subgrupo_principal == \"01\" ~ \"MEMBROS DAS FORÇAS ARMADAS\",\n                                            cbo_subgrupo_principal == \"02\" ~ \"POLICIAIS MILITARES\",\n                                            cbo_subgrupo_principal == \"03\" ~ \"BOMBEIROS MILITARES\",\n                                            cbo_subgrupo_principal == \"11\" ~ \"MEMBROS SUPERIORES E DIRIGENTES DO PODER PÚBLICO\",\n                                            cbo_subgrupo_principal == \"12\" ~ \"DIRIGENTES DE EMPRESAS E ORGANIZAÇÕES (EXCETO DE INTERESSE PÚBLICO)\",\n                                            cbo_subgrupo_principal == \"13\" ~ \"DIRETORES E GERENTES EM EMPRESA DE SERVIÇOS DE SAÚDE, DA EDUCAÇÃO, OU DE SERVIÇOS CULTURAIS, SOCIAIS OU PESSOAIS\",\n                                            cbo_subgrupo_principal == \"14\" ~ \"GERENTES\",\n                                            cbo_subgrupo_principal == \"20\" ~ \"PESQUISADORES E PROFISSIONAIS POLICIENTÍFICOS\",\n                                            cbo_subgrupo_principal == \"21\" ~ \"PROFISSIONAIS DAS CIÊNCIAS EXATAS,FÍSICAS E DA ENGENHARIA\",\n                                            cbo_subgrupo_principal == \"22\" ~ \"PROFISSIONAIS DAS CIÊNCIAS BIOLÓGICAS,DA SAÚDE E AFINS\",\n                                            cbo_subgrupo_principal == \"23\" ~ \"PROFISSIONAIS DO ENSINO\",\n                                            cbo_subgrupo_principal == \"24\" ~ \"PROFISSIONAIS DAS CIÊNCIAS JURÍDICAS\",\n                                            cbo_subgrupo_principal == \"25\" ~ \"PROFISSIONAIS DAS CIÊNCIAS SOCIAIS E HUMANAS\",\n                                            cbo_subgrupo_principal == \"26\" ~ \"COMUNICADORES, ARTISTAS E RELIGIOSOS\",\n                                            cbo_subgrupo_principal == \"27\" ~ \"PROFISSIONAIS EM GASTRONOMIA\",\n                                            cbo_subgrupo_principal == \"30\" ~ \"TÉCNICOS POLIVALENTES\",\n                                            cbo_subgrupo_principal == \"31\" ~ \"TÉCNICOS DE NÍVEL MÉDIO DAS CIÊNCIAS FÍSICAS,QUÍMICAS, ENGENHARIA E AFINS\",\n                                            cbo_subgrupo_principal == \"32\" ~ \"TÉCNICOS DE NÍVEL MÉDIO DAS CIÊNCIAS BIOLÓGICAS, BIOQUÍMICAS, DA SAÚDE E AFINS\",\n                                            cbo_subgrupo_principal == \"33\" ~ \"PROFESSORES LEIGOS E DE NÍVEL MÉDIO\",\n                                            cbo_subgrupo_principal == \"34\" ~ \"TÉCNICOS DE NÍVEL MÉDIO EM SERVIÇOS DE TRANSPORTES\",\n                                            cbo_subgrupo_principal == \"35\" ~ \"TÉCNICOS DE NIVEL MÉDIO NAS CIÊNCIAS ADMINISTRATIVAS\", \n                                            cbo_subgrupo_principal == \"36\" ~ \"TÉCNICOS EM NIVEL MÉDIO DOS SERVIÇOS CULTURAIS, DAS COMUNICAÇÕES E DOS DESPORTOS\",\n                                            cbo_subgrupo_principal == \"37\" ~ \"TÉCNICOS EM NIVEL MÉDIO DOS SERVIÇOS CULTURAIS, DAS COMUNICAÇÕES E DOS DESPORTOS\",\n                                            cbo_subgrupo_principal == \"39\" ~ \"OUTROS TÉCNICOS DE NÍVEL MÉDIO\",\n                                            cbo_subgrupo_principal == \"41\" ~ \"ESCRITURÁRIOS\",\n                                            cbo_subgrupo_principal == \"42\" ~ \"TRABALHADORES DE ATENDIMENTO AO PÚBLICO\",\n                                            cbo_subgrupo_principal == \"51\" ~ \"TRABALHADORES DOS SERVIÇOS\",\n                                            cbo_subgrupo_principal == \"52\" ~ \"VENDEDORES E PRESTADORES DE SERVIÇOS DO COMÉRCIO\", \n                                            cbo_subgrupo_principal == \"61\" ~ \"PRODUTORES NA EXPLORAÇÃO AGROPECUÁRIA\", \n                                            cbo_subgrupo_principal == \"62\" ~ \"TRABALHADORES NA EXPLORAÇÃO AGROPECUÁRIA\",\n                                            cbo_subgrupo_principal == \"63\" ~ \"PESCADORES E EXTRATIVISTAS FLORESTAIS\", \n                                            cbo_subgrupo_principal == \"64\" ~ \"TRABALHADORES DA MECANIZAÇÃO AGROPECUÁRIA E FLORESTAL\", \n                                            cbo_subgrupo_principal == \"71\" ~ \"TRABALHADORES DA INDÚSTRIA EXTRATIVA E DA CONSTRUÇÃO CIVIL\", \n                                            cbo_subgrupo_principal == \"72\" ~ \"TRABALHADORES DA TRANSFORMAÇÃO DE METAIS E DE COMPÓSITOS\", \n                                            cbo_subgrupo_principal == \"73\" ~ \"TRABALHADORES DA FABRICAÇÃO E INSTALAÇÃO ELETROELETRÔNICA\",\n                                            cbo_subgrupo_principal == \"74\" ~ \"MONTADORES DE APARELHOS E INSTRUMENTOS DE PRECISÃO E MUSICAIS\", \n                                            cbo_subgrupo_principal == \"75\" ~ \"JOALHEIROS, VIDREIROS, CERAMISTAS E AFINS\",\n                                            cbo_subgrupo_principal == \"76\" ~ \"TRABALHADORES NAS INDÚSTRIAS TÊXTIL, DO CURTIMENTO, DO VESTÚARIO E DAS ARTES GRÁFICAS\",\n                                            cbo_subgrupo_principal == \"77\" ~ \"TRABALHADORES DAS INDÚSTRIAS DE MADEIRA E DO MOBILIÁRIO\", \n                                            cbo_subgrupo_principal == \"78\" ~ \"TRABALHADORES DE FUNÇÕES TRANSVERSAIS\", \n                                            cbo_subgrupo_principal == \"79\" ~ \"TRABALHADORES DO ARTESANATO\",\n                                            cbo_subgrupo_principal == \"81\" ~ \"TRABALHADORES EM INDÚSTRIAS DE PROCESSOS CONTÍNUOS E OUTRAS INDÚSTRIAS\",\n                                            cbo_subgrupo_principal == \"82\" ~ \"TRABALHADORES DE INSTALAÇÕES SIDERÚRGICAS  E DE MATERIAIS DE CONSTRUÇÃO\",\n                                            cbo_subgrupo_principal == \"83\" ~ \"TRABALHADORES DE INSTALAÇÕES E MÁQUINAS DE FABRICAÇÃO DE CELULOSE E PAPEL\", \n                                            cbo_subgrupo_principal == \"84\" ~ \"TRABALHADORES DA FABRICAÇÃO DE ALIMENTOS, BEBIDAS E FUMO\",\n                                            cbo_subgrupo_principal == \"86\" ~ \"OPERADORES DE PRODUÇÃO, CAPTAÇÃO,TRATAMENTO E DISTRIBUIÇÃO (ENERGIA, ÁGUA E UTILIDADES)\",\n                                            cbo_subgrupo_principal == \"91\" ~ \"TRABALHADORES EM SERVIÇOS DE REPARAÇÃO E MANUTENÇÃO MECÂNICA\",\n                                            cbo_subgrupo_principal == \"95\" ~ \"POLIMANTENEDORES\",\n                                            cbo_subgrupo_principal == \"99\" ~ \"OUTROS TRABALHADORES DA CONSERVAÇÃO,MANUTENÇÃO E REPARAÇÃO\",\n ))"
  },
  {
    "objectID": "fatores.html#modifying-the-cbo-dataframe",
    "href": "fatores.html#modifying-the-cbo-dataframe",
    "title": "Descriptive Analysis",
    "section": "",
    "text": "Code\ncbo = tabCBO %&gt;% \n  mutate(cbo_grande_grupo = substr(cod, start = 1, stop = 1)) %&gt;%\n  mutate(cbo_subgrupo_principal = substr(cod, start = 1, stop = 2)) %&gt;% \n  relocate(cbo_grande_grupo, .before = cod) %&gt;% \n  relocate(cbo_subgrupo_principal, .before = cod) %&gt;%\n  mutate(cbo_grande_grupo_desc = case_when(cbo_grande_grupo == \"0\" ~ \"Forças armadas,policiais e bombeiros militares\",\n                                           cbo_grande_grupo == \"1\" ~ \"Membros superiores do poder público, dirigentes de org. de empresas e gerentes\",\n                                           cbo_grande_grupo == \"2\" ~ \"Profissionais das ciências e das artes\",\n                                           cbo_grande_grupo == \"3\" ~ \"Técnicos do nível médio\",\n                                           cbo_grande_grupo == \"4\" ~ \"Trab. de serviços administrativos\",\n                                           cbo_grande_grupo == \"5\" ~ \"Trab. dos servuços, vendedores do comércio em lojas e mercados\",\n                                           cbo_grande_grupo == \"6\" ~ \"Trab. agropecuários,florestais, da caça e pesca\",\n                                           cbo_grande_grupo == \"7\" ~ \"Trab. da produção de bens e serviços industrias 1\",\n                                           cbo_grande_grupo == \"8\" ~ \"Trab. da produção de bens e serviços industriais 2\",\n                                           cbo_grande_grupo == \"9\" ~ \"Trab. de manutenção e reparo\"\n))  %&gt;%\n  group_by(cbo_grande_grupo) %&gt;%\n  mutate(cbo_subgrupo_desc = case_when(cbo_subgrupo_principal == \"01\" ~ \"MEMBROS DAS FORÇAS ARMADAS\",\n                                            cbo_subgrupo_principal == \"02\" ~ \"POLICIAIS MILITARES\",\n                                            cbo_subgrupo_principal == \"03\" ~ \"BOMBEIROS MILITARES\",\n                                            cbo_subgrupo_principal == \"11\" ~ \"MEMBROS SUPERIORES E DIRIGENTES DO PODER PÚBLICO\",\n                                            cbo_subgrupo_principal == \"12\" ~ \"DIRIGENTES DE EMPRESAS E ORGANIZAÇÕES (EXCETO DE INTERESSE PÚBLICO)\",\n                                            cbo_subgrupo_principal == \"13\" ~ \"DIRETORES E GERENTES EM EMPRESA DE SERVIÇOS DE SAÚDE, DA EDUCAÇÃO, OU DE SERVIÇOS CULTURAIS, SOCIAIS OU PESSOAIS\",\n                                            cbo_subgrupo_principal == \"14\" ~ \"GERENTES\",\n                                            cbo_subgrupo_principal == \"20\" ~ \"PESQUISADORES E PROFISSIONAIS POLICIENTÍFICOS\",\n                                            cbo_subgrupo_principal == \"21\" ~ \"PROFISSIONAIS DAS CIÊNCIAS EXATAS,FÍSICAS E DA ENGENHARIA\",\n                                            cbo_subgrupo_principal == \"22\" ~ \"PROFISSIONAIS DAS CIÊNCIAS BIOLÓGICAS,DA SAÚDE E AFINS\",\n                                            cbo_subgrupo_principal == \"23\" ~ \"PROFISSIONAIS DO ENSINO\",\n                                            cbo_subgrupo_principal == \"24\" ~ \"PROFISSIONAIS DAS CIÊNCIAS JURÍDICAS\",\n                                            cbo_subgrupo_principal == \"25\" ~ \"PROFISSIONAIS DAS CIÊNCIAS SOCIAIS E HUMANAS\",\n                                            cbo_subgrupo_principal == \"26\" ~ \"COMUNICADORES, ARTISTAS E RELIGIOSOS\",\n                                            cbo_subgrupo_principal == \"27\" ~ \"PROFISSIONAIS EM GASTRONOMIA\",\n                                            cbo_subgrupo_principal == \"30\" ~ \"TÉCNICOS POLIVALENTES\",\n                                            cbo_subgrupo_principal == \"31\" ~ \"TÉCNICOS DE NÍVEL MÉDIO DAS CIÊNCIAS FÍSICAS,QUÍMICAS, ENGENHARIA E AFINS\",\n                                            cbo_subgrupo_principal == \"32\" ~ \"TÉCNICOS DE NÍVEL MÉDIO DAS CIÊNCIAS BIOLÓGICAS, BIOQUÍMICAS, DA SAÚDE E AFINS\",\n                                            cbo_subgrupo_principal == \"33\" ~ \"PROFESSORES LEIGOS E DE NÍVEL MÉDIO\",\n                                            cbo_subgrupo_principal == \"34\" ~ \"TÉCNICOS DE NÍVEL MÉDIO EM SERVIÇOS DE TRANSPORTES\",\n                                            cbo_subgrupo_principal == \"35\" ~ \"TÉCNICOS DE NIVEL MÉDIO NAS CIÊNCIAS ADMINISTRATIVAS\", \n                                            cbo_subgrupo_principal == \"36\" ~ \"TÉCNICOS EM NIVEL MÉDIO DOS SERVIÇOS CULTURAIS, DAS COMUNICAÇÕES E DOS DESPORTOS\",\n                                            cbo_subgrupo_principal == \"37\" ~ \"TÉCNICOS EM NIVEL MÉDIO DOS SERVIÇOS CULTURAIS, DAS COMUNICAÇÕES E DOS DESPORTOS\",\n                                            cbo_subgrupo_principal == \"39\" ~ \"OUTROS TÉCNICOS DE NÍVEL MÉDIO\",\n                                            cbo_subgrupo_principal == \"41\" ~ \"ESCRITURÁRIOS\",\n                                            cbo_subgrupo_principal == \"42\" ~ \"TRABALHADORES DE ATENDIMENTO AO PÚBLICO\",\n                                            cbo_subgrupo_principal == \"51\" ~ \"TRABALHADORES DOS SERVIÇOS\",\n                                            cbo_subgrupo_principal == \"52\" ~ \"VENDEDORES E PRESTADORES DE SERVIÇOS DO COMÉRCIO\", \n                                            cbo_subgrupo_principal == \"61\" ~ \"PRODUTORES NA EXPLORAÇÃO AGROPECUÁRIA\", \n                                            cbo_subgrupo_principal == \"62\" ~ \"TRABALHADORES NA EXPLORAÇÃO AGROPECUÁRIA\",\n                                            cbo_subgrupo_principal == \"63\" ~ \"PESCADORES E EXTRATIVISTAS FLORESTAIS\", \n                                            cbo_subgrupo_principal == \"64\" ~ \"TRABALHADORES DA MECANIZAÇÃO AGROPECUÁRIA E FLORESTAL\", \n                                            cbo_subgrupo_principal == \"71\" ~ \"TRABALHADORES DA INDÚSTRIA EXTRATIVA E DA CONSTRUÇÃO CIVIL\", \n                                            cbo_subgrupo_principal == \"72\" ~ \"TRABALHADORES DA TRANSFORMAÇÃO DE METAIS E DE COMPÓSITOS\", \n                                            cbo_subgrupo_principal == \"73\" ~ \"TRABALHADORES DA FABRICAÇÃO E INSTALAÇÃO ELETROELETRÔNICA\",\n                                            cbo_subgrupo_principal == \"74\" ~ \"MONTADORES DE APARELHOS E INSTRUMENTOS DE PRECISÃO E MUSICAIS\", \n                                            cbo_subgrupo_principal == \"75\" ~ \"JOALHEIROS, VIDREIROS, CERAMISTAS E AFINS\",\n                                            cbo_subgrupo_principal == \"76\" ~ \"TRABALHADORES NAS INDÚSTRIAS TÊXTIL, DO CURTIMENTO, DO VESTÚARIO E DAS ARTES GRÁFICAS\",\n                                            cbo_subgrupo_principal == \"77\" ~ \"TRABALHADORES DAS INDÚSTRIAS DE MADEIRA E DO MOBILIÁRIO\", \n                                            cbo_subgrupo_principal == \"78\" ~ \"TRABALHADORES DE FUNÇÕES TRANSVERSAIS\", \n                                            cbo_subgrupo_principal == \"79\" ~ \"TRABALHADORES DO ARTESANATO\",\n                                            cbo_subgrupo_principal == \"81\" ~ \"TRABALHADORES EM INDÚSTRIAS DE PROCESSOS CONTÍNUOS E OUTRAS INDÚSTRIAS\",\n                                            cbo_subgrupo_principal == \"82\" ~ \"TRABALHADORES DE INSTALAÇÕES SIDERÚRGICAS  E DE MATERIAIS DE CONSTRUÇÃO\",\n                                            cbo_subgrupo_principal == \"83\" ~ \"TRABALHADORES DE INSTALAÇÕES E MÁQUINAS DE FABRICAÇÃO DE CELULOSE E PAPEL\", \n                                            cbo_subgrupo_principal == \"84\" ~ \"TRABALHADORES DA FABRICAÇÃO DE ALIMENTOS, BEBIDAS E FUMO\",\n                                            cbo_subgrupo_principal == \"86\" ~ \"OPERADORES DE PRODUÇÃO, CAPTAÇÃO,TRATAMENTO E DISTRIBUIÇÃO (ENERGIA, ÁGUA E UTILIDADES)\",\n                                            cbo_subgrupo_principal == \"91\" ~ \"TRABALHADORES EM SERVIÇOS DE REPARAÇÃO E MANUTENÇÃO MECÂNICA\",\n                                            cbo_subgrupo_principal == \"95\" ~ \"POLIMANTENEDORES\",\n                                            cbo_subgrupo_principal == \"99\" ~ \"OUTROS TRABALHADORES DA CONSERVAÇÃO,MANUTENÇÃO E REPARAÇÃO\",\n ))"
  },
  {
    "objectID": "fatores.html#plots",
    "href": "fatores.html#plots",
    "title": "Descriptive Analysis",
    "section": "Plots",
    "text": "Plots\n\n\nCode\n#total de anomalias por ano, segundo o tipo de anomalia\nfigure1 = sinasc %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  group_by(ano_nasc, anomal_categ) %&gt;% \n  count() %&gt;% \n  filter(anomal_categ != \"sem_anomalia\") %&gt;% \n  bind_rows(., sinasc %&gt;% \n              mutate(ano_nasc = year(dtnasc)) %&gt;% \n              group_by(ano_nasc, idanomal) %&gt;% \n              count() %&gt;% \n              filter(idanomal == \"Sim\") %&gt;% \n              rename(anomal_categ = idanomal) %&gt;% \n              mutate(anomal_categ = gsub(\"Sim\", \"anomalias congênitas\", anomal_categ))) %&gt;% \n  ggline(data = .,\n         x = \"ano_nasc\",\n         y = \"n\",\n         color = \"anomal_categ\",\n         legend_title=NULL,\n         xlab = \"Ano de nascimento\", \n         ylab = \"Número de casos\") +\n  scale_y_continuous(breaks = seq(from = 0, \n                                  to = 30000,\n                                  by = 5000))+\n  labs(color = NULL)\n\n\nfigure1\n\n\n\n\n\n\n\nCode\nfigure2 = sinasc %&gt;% \n  drop_na(anomal_prioritarias) %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  mutate(anomal_prioritarias = if_else(anomal_prioritarias != \"outras_anomalias\", \n                                       \"Anomalias prioritárias\", \n                                       \"Outras anomalias\")) %&gt;% \n  group_by(ano_nasc, anomal_prioritarias) %&gt;% \n  count() %&gt;% \n  ggbarplot(data = .,\n            x = \"ano_nasc\",\n            y = \"n\",\n            color = \"anomal_prioritarias\",\n            fill = \"anomal_prioritarias\",\n            position = position_dodge(),\n            label = TRUE,\n            lab.size = 2.5,\n            xlab = \"Ano de nascimento\", \n            ylab = \"Número de casos\") +\n  labs(fill = \"\", color = \"\")\n\nfigure2\n\n\n\n\n\n\n\nCode\n# figure3=sinasc %&gt;% \n#   drop_na(anomal_prioritarias) %&gt;% \n#   mutate(ano_nasc = year(dtnasc)) %&gt;% \n#   group_by(ano_nasc, anomal_prioritarias) %&gt;% \n#   count() %&gt;% \n#   filter(anomal_prioritarias != \"outras_anomalias\") %&gt;% \n#   ggbarplot(data = .,\n#             x = \"ano_nasc\",\n#             y = \"n\",\n#             label = TRUE,\n#             lab.size = 2.5,\n#             ggtheme = \"minimal\",\n#             xlab = \"Ano de nascimento\", \n#             ylab = \"Número de casos\",\n#             facet.by = \"anomal_prioritarias\") +\n#   labs(fill = \"\", color = \"\")\n# \n# figure3\n\n\n\n\nCode\nfigure4 = sinasc %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  group_by(ano_nasc, mun_res_uf, idanomal) %&gt;% \n  count() %&gt;% \n  pivot_wider(names_from = idanomal,\n              values_from = n) %&gt;%\n  rowwise() %&gt;% \n  mutate(incidencia = (sim/(sim+não))*10e5) %&gt;% \n  drop_na(mun_res_uf) %&gt;% \n  select(mun_res_uf, ano_nasc, incidencia) %&gt;%\n  pivot_wider(names_from = ano_nasc,\n              values_from = incidencia) %&gt;% \n  column_to_rownames(\"mun_res_uf\") %&gt;% \n  ggballoonplot(data, color = \"#0073C2FF\", fill = \"#0073C2FF\")\n\nfigure4\n\n\n\n\n\n\n\nCode\nfigure5 = sinasc %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  group_by(ano_nasc, mun_res_uf, idanomal) %&gt;% \n  count() %&gt;% \n  pivot_wider(names_from = idanomal,\n              values_from = n) %&gt;%\n  rowwise() %&gt;% \n  mutate(incidencia = (sim/(sim+não))*10e5) %&gt;% \n  drop_na(mun_res_uf) %&gt;% \n  # select(mun_res_uf, ano_nasc, incidencia) %&gt;%\n  # pivot_wider(names_from = ano_nasc,\n  #             values_from = incidencia) %&gt;% \n  # column_to_rownames(\"mun_res_uf\") %&gt;% \n  mutate(regiao = case_when(\n    mun_res_uf %in% c(\"Amazonas\",\"Roraima\",\"Amapá\",\"Pará\",\n                      \"Tocantins\",\"Rondônia\",\"Acre\") ~ \"Norte\",\n    mun_res_uf %in% c (\"Maranhão\",\"Piauí\",\"Ceará\",\n                       \"Rio Grande do Norte\",\"Pernambuco\",\"Paraíba\",\"Sergipe\",\n                       \"Alagoas\",\"Bahia\" ) ~ \"Nordeste\",\n    mun_res_uf %in% c (\"Mato Grosso\",\"Mato Grosso do Sul\",\"Goiás\", \"Distrito Federal\") ~ \"Centro-Oeste\",\n    mun_res_uf %in% c (\"São Paulo\",\"Rio de Janeiro\",\"Espírito Santo\",\"Minas Gerais\") ~ \"Sudeste\",\n    mun_res_uf %in% c (\"Paraná\" ,\"Rio Grande do Sul\",\"Santa Catarina\") ~ \"Sul\"\n  )) %&gt;% \n  ggline(data = .,\n         x = \"ano_nasc\",\n         y = \"incidencia\",color = \"mun_res_uf\",\n         facet.by = \"regiao\",\n         ggtheme = theme_minimal(base_size = 8), \n         legend_title=NULL,\n         xlab = \"Ano de nascimento\",\n         ylab = \"Número de casos\",palette = ) +\n        \n  # scale_y_continuous(breaks = seq(from = 0, \n  #                                 to = 30000,\n  #                                 by = 5000))+\n  rotate_x_text()\n\n\n\n\nCode\nfigure3=sinasc %&gt;% #SAVAR DE NOVO\n  drop_na(anomal_prioritarias) %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  group_by(ano_nasc, anomal_prioritarias) %&gt;% \n  count() %&gt;% \n  filter(anomal_prioritarias != \"outras_anomalias\") %&gt;% \n  ggbarplot(data = .,\n            x = \"ano_nasc\",\n            y = \"n\",\n            label = TRUE,\n            lab.size = 2.5,\n            ggtheme = theme_minimal(),\n            xlab = \"Ano de nascimento\", \n            ylab = \"Número de casos\",\n            facet.by = \"anomal_prioritarias\") +\n  rotate_x_text() +\n  labs(fill = \"\", color = \"\")\n\n\n\n\nCode\n#filename=anomalia_prioritaria_eoutras_incidencia\nnasc_sem_anomal_ano = sinasc %&gt;% \n  filter(idanomal == \"não\") %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  group_by(ano_nasc) %&gt;% \n  count() \n\nfigure4_1 = sinasc %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  group_by(ano_nasc, anomal_prioritarias) %&gt;% \n  count() %&gt;%\n  drop_na(anomal_prioritarias) %&gt;% \n  rename(cont_anomal = n) %&gt;% \n  left_join(.,nasc_sem_anomal_ano,join_by(ano_nasc == ano_nasc)) %&gt;% \n  mutate(incidencia = (cont_anomal/(cont_anomal + n))*1e5) %&gt;% \n  filter(anomal_prioritarias != \"outras_anomalias\") %&gt;%\n  filter(!is.na(anomal_prioritarias)) %&gt;% \n  ggline(x = \"ano_nasc\",\n         y = \"incidencia\",\n         color = \"anomal_prioritarias\",\n         facet.by = \"anomal_prioritarias\",\n         xlab = \"Ano de nascimento\", \n         ylab = \"Incidência (casos/100 mil nascimentos)\") +\n  rotate_x_text() +\n  labs(color = NULL)\n\nfigure4_1\n\n\n\n\n\n\n\nCode\n#filename=anomalia_priotaria_incidencia\nfigure4_2 = sinasc %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  group_by(ano_nasc, anomal_prioritarias) %&gt;% \n  count() %&gt;%\n  drop_na(anomal_prioritarias) %&gt;% \n  rename(cont_anomal = n) %&gt;% \n  left_join(.,nasc_sem_anomal_ano,join_by(ano_nasc == ano_nasc)) %&gt;% \n  mutate(incidencia = (cont_anomal/(cont_anomal + n))*1e5) %&gt;% \n  filter(!is.na(anomal_prioritarias) & anomal_prioritarias != \"outras_anomalias\") %&gt;%  \n  ggline(x = \"ano_nasc\",\n         y = \"incidencia\",\n         color = \"anomal_prioritarias\",\n         xlab = \"Ano de nascimento\", \n         ylab = \"Incidência (casos/100 mil nascimentos)\") +\n  rotate_x_text() +\n  labs(color = NULL)\n\n\n\n\n\nCode\nfigure4 = sinasc %&gt;%  #salvar de novo\n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  group_by(ano_nasc, mun_res_uf, idanomal) %&gt;% \n  count() %&gt;% \n  pivot_wider(names_from = idanomal,\n              values_from = n) %&gt;%\n  rowwise() %&gt;% \n  mutate(incidencia = (sim/(sim+não))*1e5) %&gt;% \n  drop_na(mun_res_uf) %&gt;% \n  select(mun_res_uf, ano_nasc, incidencia) %&gt;%\n  pivot_wider(names_from = ano_nasc,\n              values_from = incidencia) %&gt;% \n  column_to_rownames(\"mun_res_uf\") %&gt;% \n  ggballoonplot(data, \n                color = \"#0073C2FF\", \n                fill = \"#0073C2FF\", \n                ggtheme = theme_minimal())\n\n\n\n\nCode\n#filename=incidencia_por_estado\nlibrary(RColorBrewer)\n\ncores_estados &lt;- brewer.pal(n = 27, name = \"Paired\")\n\n\nWarning in brewer.pal(n = 27, name = \"Paired\"): n too large, allowed maximum for palette Paired is 12\nReturning the palette you asked for with that many colors\n\n\nCode\nnomes_estados &lt;- c(\n  \"Amazonas\", \"Roraima\", \"Amapá\", \"Pará\", \"Tocantins\", \n  \"Rondônia\", \"Acre\", \"Maranhão\", \"Piauí\", \"Ceará\", \n  \"Rio Grande do Norte\", \"Pernambuco\", \"Paraíba\", \n  \"Sergipe\", \"Alagoas\", \"Bahia\", \"Mato Grosso\", \n  \"Mato Grosso do Sul\", \"Goiás\", \"Distrito Federal\", \n  \"São Paulo\", \"Rio de Janeiro\", \"Espírito Santo\", \n  \"Minas Gerais\", \"Paraná\", \"Rio Grande do Sul\", \n  \"Santa Catarina\"\n)\nn_estados &lt;- length(nomes_estados)\ncores_estados &lt;- rep(cores_estados, length.out = n_estados)\ncores_estados &lt;- setNames(cores_estados, nomes_estados)\n\nfigure5_1 &lt;- sinasc %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  group_by(ano_nasc, mun_res_uf, idanomal) %&gt;% \n  count() %&gt;% \n  pivot_wider(names_from = idanomal,\n              values_from = n) %&gt;%\n  rowwise() %&gt;% \n  mutate(incidencia = (sim/(sim + não)) * 1e5) %&gt;% \n  drop_na(mun_res_uf) %&gt;% \n  mutate(regiao = case_when(\n    mun_res_uf %in% c(\"Amazonas\",\"Roraima\",\"Amapá\",\"Pará\",\n                      \"Tocantins\",\"Rondônia\",\"Acre\") ~ \"Norte\",\n    mun_res_uf %in% c(\"Maranhão\",\"Piauí\",\"Ceará\",\n                      \"Rio Grande do Norte\",\"Pernambuco\",\"Paraíba\",\"Sergipe\",\n                      \"Alagoas\",\"Bahia\") ~ \"Nordeste\",\n    mun_res_uf %in% c(\"Mato Grosso\",\"Mato Grosso do Sul\",\"Goiás\", \"Distrito Federal\") ~ \"Centro-Oeste\",\n    mun_res_uf %in% c(\"São Paulo\",\"Rio de Janeiro\",\"Espírito Santo\",\"Minas Gerais\") ~ \"Sudeste\",\n    mun_res_uf %in% c(\"Paraná\" ,\"Rio Grande do Sul\",\"Santa Catarina\") ~ \"Sul\"\n  )) %&gt;% \n  ggline(data = .,\n         x = \"ano_nasc\",\n         y = \"incidencia\",\n         color = \"mun_res_uf\",\n         facet.by = \"regiao\",\n         ggtheme = theme_minimal(base_size = 8), \n         legend_title = NULL,\n         xlab = \"Ano de nascimento\",\n         ylab = \"Incidência\",\n         palette = cores_estados) + \n  rotate_x_text()+\n  labs(color = NULL)\n\n\n\n\nCode\n#Idade\n#filename=incidencia_idade\nfigure6 = sinasc %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  mutate(faixa_etaria_mae = case_when(idademae &lt; 18 ~ \"menor de 18\",\n                                      idademae &gt;= 18 & idademae &lt; 35 ~ \"de 18 a 34\",\n                                      idademae &gt;= 35 ~ \"maior ou igual a 35\",\n                                      is.na(idademae) == TRUE ~ \"não informado\")) %&gt;%\n  mutate(faixa_etaria_mae = fct(faixa_etaria_mae, c(\"menor de 18\", \n                                                    \"de 18 a 34\", \n                                                    \"maior ou igual a 35\", \n                                                    \"não informado\"))) %&gt;% \n  group_by(ano_nasc, faixa_etaria_mae, idanomal) %&gt;%\n  count() %&gt;% \n  pivot_wider(names_from = idanomal,\n              values_from = n) %&gt;% \n  mutate(incidencia = (sim/(sim+não))*1e5) %&gt;% \n  filter(faixa_etaria_mae != \"não informado\") %&gt;% \n  ggline(x = \"ano_nasc\",\n         y = \"incidencia\",\n         color = \"faixa_etaria_mae\",\n         xlab = \"Ano de nascimento\", \n         ylab = \"Incidência (casos/100 mil nascimentos)\") +\n  rotate_x_text() +\n  labs(color = NULL)\n\n\n\n\nCode\n#Ocupação\n#filename= incidencia_cbo_grande_grupo\ncbo2 = cbo %&gt;%\ndistinct(nome, .keep_all =  TRUE)\n\nfigure7=sinasc %&gt;%\n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  left_join(., cbo2, join_by(codocupmae == nome)) %&gt;% \n  group_by(ano_nasc, idanomal, cbo_grande_grupo, cbo_grande_grupo_desc) %&gt;%\n  count() %&gt;% \n  drop_na(cbo_grande_grupo_desc) %&gt;% \n  pivot_wider(names_from = idanomal,\n              values_from = n) %&gt;% \n  mutate(incidencia = (sim/(sim+não))*1e5) %&gt;% \n  ggline(x = \"ano_nasc\",\n         y = \"incidencia\",\n         xlab = \"Ano de nascimento\",\n         ylab = \"Incidência (casos/100 mil nascimentos)\",\n         facet.by = \"cbo_grande_grupo\") +\n  rotate_x_text()\n\n\nWarning in left_join(., cbo2, join_by(codocupmae == nome)): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 3056 of `x` matches multiple rows in `y`.\nℹ Row 1659 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n\n\nCode\ncbo2 = cbo %&gt;%\n  distinct(nome, .keep_all = TRUE)\n\nsinasc %&gt;%\n  mutate(ano_nasc = year(dtnasc)) %&gt;%\n  left_join(cbo2, by = c(\"codocupmae\" = \"nome\")) %&gt;%\n  filter(cbo_grande_grupo == \"6\") %&gt;% \n  group_by(ano_nasc, idanomal, cbo_subgrupo_desc) %&gt;%\n  count() %&gt;%\n  pivot_wider(names_from = idanomal, values_from = n, values_fill = 0) %&gt;% \n  mutate(incidencia = (sim / (sim + não)) * 1e5) %&gt;% \n  ggline(x = \"ano_nasc\",\n         y = \"incidencia\",\n         xlab = \"Ano de nascimento\",\n         ylab = \"Incidência (casos/100 mil nascimentos)\",\n         facet.by = \"cbo_subgrupo_desc\",\n         ggtheme = theme_minimal(base_size = 8)) +\n  rotate_x_text()\n\n\nWarning in left_join(., cbo2, by = c(codocupmae = \"nome\")): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 3056 of `x` matches multiple rows in `y`.\nℹ Row 1659 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n\n\n\n\n\nCode\n#Escolaridade\nfigure8 = sinasc %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  mutate(escmaeagr1 = case_when(\n    is.na(escmae) ~ \"não informado\",\n    escmae %in% c(\"Nenhum\", \"nenhum\", \"Nenhuma\") ~ \"Nenhum\",\n    escmae %in% c(\"1 a 3 anos\") ~ \"1 a 3 anos\",\n    escmae %in% c(\"4 a 7 anos\") ~ \"4 a 7 anos\",\n    escmae %in% c(\"8 a 11 anos\") ~ \"8 a 11 anos\",\n    escmae %in% c(\"Ignorado\") ~ \"Ignorado\"\n  )) %&gt;% \n  mutate(escmaeagr_1 = fct_relevel(escmaeagr1, \n                                    c(\"Nenhum\", \n                                      \"1 a 3 anos\", \n                                      \"4 a 7 anos\", \n                                      \"8 a 11 anos\", \n                                      \"Ignorado\"))) %&gt;% \n  group_by(ano_nasc, escmaeagr_1, idanomal) %&gt;%\n  count() %&gt;% \n  pivot_wider(names_from = idanomal, values_from = n) %&gt;% \n  mutate(incidencia = (sim / (sim + não)) * 1e5) %&gt;% \n  filter(escmaeagr_1 != \"não informado\") %&gt;%  # Filtra para remover \"não informado\"\n  ggline(x = \"ano_nasc\",\n         y = \"incidencia\",\n         color = \"escmaeagr_1\",\n         xlab = \"Ano de nascimento\", \n         ylab = \"Incidência (casos/100 mil nascimentos)\") +\n  rotate_x_text() +\n  labs(color = NULL)\n\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `escmaeagr_1 = fct_relevel(...)`.\nCaused by warning:\n! 1 unknown level in `f`: Ignorado\n\n\n\n\nCode\n# #Raça/cor da mãe\n# figure = sinasc %&gt;% \n#   mutate(ano_nasc = year(dtnasc)) %&gt;% \n#   mutate(racacor_mae = case_when(racacormae == 1 ~ \"Branca\",\n#                                  racacormae == 2 ~ \"Preta\",\n#                                  racacormae == 3 ~ \"Amarela\",\n#                                  racacormae == 4 ~ \"Parda\",\n#                                  racacormae == 5 ~ \"Indígena\",\n#                                  racacormae == 6 ~ \"Indeterminado\",\n#                                  is.na(racacormae) ~ \"Não informado\")) %&gt;% \n#   group_by(ano_nasc, racacor_mae, idanomal) %&gt;%\n#   count() %&gt;% \n#   View()\n#   pivot_wider(names_from = idanomal,\n#               values_from = n) %&gt;% \n#   mutate(incidencia = (sim/(sim+não))*1e5) %&gt;% \n#    filter(racacor_mae != \"?\" & racacor_mae != \"Não informado\") %&gt;% \n#   ggline(x = \"ano_nasc\",\n#          y = \"incidencia\",\n#          color = \"racacor_mae\",\n#          xlab = \"Ano de nascimento\", \n#          ylab = \"Incidência (casos/100 mil nascimentos)\") +\n#   rotate_x_text() +\n#   labs(color = NULL)\n\n\n\n\nCode\n#Aborto\nfigure9 = sinasc %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;%\n  mutate(qtd_filmort = case_when(\n    is.na(qtdfilmort) ~ \"Ignorado\",\n    qtdfilmort == 0 ~ \"Nenhum\",\n    qtdfilmort == 1 ~ \"1\",\n    qtdfilmort &gt;= 2 ~ \"≥2\" \n  )) %&gt;% \n  mutate(qtd_filmort = fct_relevel(qtd_filmort, c(\"Ignorado\",\n                                                  \"Nenhum\",\n                                                  \"1\",\n                                                  \"≥2\"))) %&gt;% \n  group_by(ano_nasc, qtd_filmort, idanomal) %&gt;%\n  count() %&gt;% \n  filter(qtd_filmort != \"Ignorado\") %&gt;%  \n  pivot_wider(names_from = idanomal, values_from = n) %&gt;% \n  mutate(incidencia = (sim / (sim + não)) * 1e5) %&gt;% \n  ggline(x = \"ano_nasc\",\n         y = \"incidencia\",\n         color = \"qtd_filmort\",\n         xlab = \"Ano de nascimento\", \n         ylab = \"Incidência (casos/100 mil nascimentos)\") +\n  rotate_x_text() +\n  labs(color = NULL)\n\n\n\n\nCode\n#Número de consultas pré-natal\nfigure10= sinasc %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  group_by(ano_nasc, consultas, idanomal) %&gt;%\n  count() %&gt;% \n  filter(!is.na(consultas)) %&gt;%  \n  pivot_wider(names_from = idanomal, values_from = n) %&gt;% \n  mutate(incidencia = (sim / (sim + não)) * 1e5) %&gt;% \n  ggline(x = \"ano_nasc\",\n         y = \"incidencia\",\n         color = \"consultas\",\n         xlab = \"Ano de nascimento\", \n         ylab = \"Incidência (casos/100 mil nascimentos)\") +\n  rotate_x_text() +\n  labs(color = NULL)\n\n\n\n\nCode\n#Semanas de gestação\n\nfigure11 = sinasc %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  mutate(gestacao_agrupado = case_when(\n    gestacao %in% c(\"Menos de 22 semanas\", \"22 a 27 semanas\", \"28 a 31 semanas\") ~ \"Menor que 37 semanas\",\n    gestacao %in% c(\"37 a 41 semanas\") ~ \"37 a 41 semanas\",\n    gestacao %in% c(\"42 semanas ou mais\") ~ \"42 semanas ou mais\",\n    is.na(gestacao) ~ \"não informado\"\n  )) %&gt;%\n  mutate(gestacao_agrupado = fct_relevel(gestacao_agrupado, \n                                          c(\"Menor que 37 semanas\", \n                                            \"37 a 41 semanas\", \n                                            \"42 semanas ou mais\", \n                                            \"não informado\"))) %&gt;% \n  group_by(ano_nasc, gestacao_agrupado, idanomal) %&gt;%\n  count() %&gt;% \n  filter(gestacao_agrupado != \"não informado\") %&gt;%  \n  pivot_wider(names_from = idanomal, values_from = n) %&gt;% \n  mutate(incidencia = (sim / (sim + não)) * 1e5) %&gt;% \n  ggline(x = \"ano_nasc\",\n         y = \"incidencia\",\n         color = \"gestacao_agrupado\",  \n         xlab = \"Ano de nascimento\", \n         ylab = \"Incidência (casos/100 mil nascimentos)\") +\n  rotate_x_text() +\n  labs(color = NULL)\n\n\n\n\nCode\n#Tipo de gravidez\nfigure12= sinasc %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  mutate(gestacao_tipo = case_when(  \n    gravidez %in% c(\"única\") ~ \"Única\",\n    gravidez %in% c(\"Dupla\") ~ \"Dupla\",\n    gravidez %in% c(\"Tripla e mais\") ~ \"Tripla e mais\",\n    TRUE ~ NA_character_ \n  )) %&gt;% \n  mutate(gestacao_tipo = fct(gestacao_tipo, c(\"Única\", \"Dupla\", \"Tripla e mais\"))) %&gt;% \n  group_by(ano_nasc, gestacao_tipo, idanomal) %&gt;%\n  count() %&gt;% \n  filter(!is.na(gestacao_tipo)) %&gt;% \n  pivot_wider(names_from = idanomal, values_from = n) %&gt;% \n  mutate(incidencia = (sim / (sim + não)) * 1e5) %&gt;% \n  ggline(x = \"ano_nasc\",\n         y = \"incidencia\",\n         color = \"gestacao_tipo\", \n         xlab = \"Ano de nascimento\", \n         ylab = \"Incidência (casos/100 mil nascimentos)\") +\n  rotate_x_text() +\n  labs(color = NULL)\n\n\n\n\nCode\n#Tipo de parto\nfigure13 = sinasc %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  group_by(ano_nasc, parto, idanomal) %&gt;%\n  count() %&gt;% \n  filter(!is.na(parto)) %&gt;% \n  pivot_wider(names_from = idanomal,\n              values_from = n) %&gt;% \n  mutate(incidencia = (sim/(sim+não))*1e5) %&gt;% \n  ggline(x = \"ano_nasc\",\n         y = \"incidencia\",\n         color = \"parto\",\n         xlab = \"Ano de nascimento\", \n         ylab = \"Incidência (casos/100 mil nascimentos)\") +\n  rotate_x_text() +\n  labs(color = NULL)\n\n\n\n\nCode\n#Sexo do recém-nascido\nfigure14 = sinasc %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  mutate(sexo_bb = case_when(\n    sexo %in% c(\"Feminino\") ~ \"Feminino\",\n    sexo %in% c(\"Masculino\") ~ \"Masculino\",\n    is.na(sexo) ~ \"não informado\")) %&gt;%\n  group_by(ano_nasc, sexo_bb, idanomal) %&gt;%\n  count() %&gt;% \n  pivot_wider(names_from = idanomal, values_from = n) %&gt;% \n  mutate(incidencia = (sim / (sim + não)) * 1e5) %&gt;% \n  filter(sexo_bb != \"não informado\") %&gt;% \n  ggline(x = \"ano_nasc\",\n         y = \"incidencia\",\n         color = \"sexo_bb\",\n         xlab = \"Ano de nascimento\", \n         ylab = \"Incidência (casos/100 mil nascimentos)\") +\n  rotate_x_text() +\n  labs(color = NULL)\n\n\n\n\nCode\n#Apgar 5º minuto\n\nfigure15 = sinasc %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  mutate(apgar_5 = case_when(\n    apgar5 &lt; 7 ~ \"menor que 7\",\n    apgar5 &gt;= 7 ~ \"maior ou igual a 7\",\n    is.na(apgar5) ~ \"não informado\"\n  )) %&gt;% \n  mutate(apgar_5 = fct_relevel(apgar_5, c(\"menor que 7\", \"maior ou igual a 7\", \"não informado\"))) %&gt;% \n  group_by(ano_nasc, apgar_5, idanomal) %&gt;%\n  count() %&gt;% \n  pivot_wider(names_from = idanomal, values_from = n) %&gt;% \n  mutate(incidencia = (sim / (sim + não)) * 1e5) %&gt;% \n  filter(apgar_5 != \"não informado\") %&gt;% \n  ggline(x = \"ano_nasc\",\n         y = \"incidencia\",\n         color = \"apgar_5\",\n         xlab = \"Ano de nascimento\", \n         ylab = \"Incidência (casos/100 mil nascimentos)\") +\n  rotate_x_text() +\n  labs(color = NULL)\n\n\n\n\nCode\n# #Raça/cor do recém-nascido\n# sinasc %&gt;%\n#   mutate(ano_nasc = year(dtnasc)) %&gt;% \n#   mutate(racacor_nascido = case_when(\n#     racacor_rn == 1 | racacorn == 1 ~ \"Branca\",\n#     racacor_rn == 2 | racacorn == 2 ~ \"Preta\",\n#     racacor_rn == 3 | racacorn == 3 ~ \"Amarela\",\n#     racacor_rn == 4 | racacorn == 4 ~ \"Parda\",\n#     racacor_rn == 5 | racacorn == 5 ~ \"Indígena\",  \n#     is.na(racacor_rn) & is.na(racacorn) ~ \"não informado\"\n#   )) %&gt;% \n#   group_by(ano_nasc, racacor_nascido, idanomal) %&gt;%\n#   count() %&gt;% \n#   pivot_wider(names_from = idanomal,\n#               values_from = n) %&gt;%\n#   mutate(incidencia = (sim/(sim+não))*1e5) %&gt;%\n#   filter(racacor_nascido != \"não informado\") %&gt;%\n#   ggline(x = \"ano_nasc\",\n#          y = \"incidencia\",\n#          color = \"racacor_nascido\",\n#          xlab = \"Ano de nascimento\",\n#          ylab = \"Incidência (casos/100 mil nascimentos)\") +\n#   rotate_x_text() +\n#   labs(color = NULL)\n\n\n\n\nCode\n#Peso ao nascer (em g)\n\nfigure16 = sinasc %&gt;% \n  mutate(ano_nasc = year(dtnasc)) %&gt;% \n  mutate(peso_rn = case_when(\n    peso &lt; 2500 ~ \"menor que 2500\",\n    peso &gt;= 2500 ~ \"maior ou igual a 2500\",\n    is.na(peso) ~ \"não informado\"\n  )) %&gt;%\n  mutate(peso_rn = fct_relevel(peso_rn, c(\"menor que 2500\", \"maior ou igual a 2500\", \"não informado\"))) %&gt;% \n  group_by(ano_nasc, peso_rn, idanomal) %&gt;%\n  count() %&gt;% \n  pivot_wider(names_from = idanomal, values_from = n) %&gt;% \n  mutate(incidencia = (sim/(sim+não))*1e5) %&gt;%\n  filter(peso_rn != \"não informado\") %&gt;% \n  ggline(x = \"ano_nasc\",\n         y = \"incidencia\",\n         color = \"peso_rn\",\n         xlab = \"Ano de nascimento\", \n         ylab = \"Incidência (casos/100 mil nascimentos)\") +\n  rotate_x_text() +\n  labs(color = NULL)"
  }
]